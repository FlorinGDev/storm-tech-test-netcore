@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
            <div>
                <input type="checkbox" id="isDoneToggle"></<input>
                <label for="isDoneToggle">Hide IsDone Items</label>
            </div>
           
            <a asp-action="Detail" asp-controller="TodoList" asp-route-todoListId="@Model.TodoListId" asp-route-oderByRank="true"> Order on Rank descending</a>
        </li>

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass @(item.IsDone?"onToggleIsDoneHide":"")">

                <div class="row">

                    <div class="col-md-8">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                                <p>@item.Rank</p>
                            }
                            else
                            {
                                <text>@item.Title</text>
                                <p>@item.Rank</p>
                            }
                        </a>
                    </div>
                   
                    <div class="col-md-4 text-right">
                        <small>
                            @{
                                var gravatarName = await Gravatar.GetGravatarUseName(item.ResponsibleParty.Email);
                            }
                            @item.ResponsibleParty.UserName
                            @gravatarName
                            @* THIS CAN BE TAKEN WITH FIRST CALL TO TAKE NAME  *@
                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30" />
                          
                          
                        </small>
                    </div>
                </div>

            </li>
        }
    </ul>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/details.js"></script>